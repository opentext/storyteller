<stl:stl xmlns:stl="http://developer.opentext.com/schemas/storyteller/layout" 
		 xmlns:xp="http://developer.opentext.com/schemas/storyteller/xmlpreprocessor"
		 xmlns:scd="http://developer.opentext.com/schemas/storyteller/chart/definition" version="0.1">
  <stl:fixtures>
	<xp:fixture key="link:/tdt/functions.xml">
	  <!-- Reusable TDT function library -->
	  <tdt:transformation 
		  xmlns:tdt="http://developer.opentext.com/schemas/storyteller/transformation/tdt" 
		  xmlns:usr="http://developer.opentext.com/schemas/storyteller/transformation/usr"
			xmlns:ddi="http://developer.opentext.com/schemas/storyteller/layout/ddi/v1"
			version="1.0">
		<tdt:rule path="usr:extreme">
		  <tdt:value key="$nodeset"/>
		  <tdt:value key="$xpath"/>
		  <tdt:value key="$op"/>
		  <tdt:value key="$expr">concat('$nodeset[not(',$xpath, $op, 'preceding-sibling::*/', $xpath, ') and not(', $xpath, $op, 'following-sibling::*/', $xpath, ')]/', $xpath)</tdt:value>
		  <tdt:value key="return">tdt:eval($expr)</tdt:value>
		</tdt:rule>
		<tdt:rule path="usr:min">
		  <tdt:value key="$nodeset"/>
		  <tdt:value key="$xpath"/>
		  <tdt:value key="return">usr:extreme( $nodeset, $xpath, '&gt;=')</tdt:value>
		</tdt:rule>
		<tdt:rule path="usr:max">
		  <tdt:value key="$nodeset"/>
		  <tdt:value key="$xpath"/>
		  <tdt:value key="return">usr:extreme( $nodeset, $xpath, '&lt;=')</tdt:value>
		</tdt:rule>
	  </tdt:transformation>
	</xp:fixture>
	<xp:fixture key="link:/tdt/template.xml">
	  <!-- TDT template used for dynamic creation of TDT rules -->
	  <tdt:transformation xmlns:tdt="http://developer.opentext.com/schemas/storyteller/transformation/tdt"
												xmlns:ddi="http://developer.opentext.com/schemas/storyteller/layout/ddi/v1" version="1.0">
		<tdt:rule path="//svg:path[@id=?]">
		  <tdt:value key="$region">/data/election/ddi:row[@id=?]</tdt:value>
		  <tdt:value key="@style">$region/ddi:cell[3]/@data_style</tdt:value>
		</tdt:rule>
	  </tdt:transformation>
	</xp:fixture>
	<xp:fixture key="link:/tdt/rules.xml">
	  <!-- TDT rules used for dynamic creation of TDT rules -->
	  <tdt:transformation xmlns:tdt="http://developer.opentext.com/schemas/storyteller/transformation/tdt"
												xmlns:ddi="http://developer.opentext.com/schemas/storyteller/layout/ddi/v1" version="1.0">
		<tdt:rule path="//tdt:rule[@path='//svg:path[@id=?]']">
		  <tdt:value key=".">/data/election/ddi:row</tdt:value>
		  <tdt:value key="@path">concat("//svg:path[@id='", @id, "']")</tdt:value>
		</tdt:rule>
		<tdt:rule path="//tdt:rule[@path='//svg:path[@id=?]']/tdt:value[@key='$region']">
		  <tdt:value key="text()">concat("/data/election/ddi:row[@id='", @id, "']")</tdt:value>
		</tdt:rule>
	  </tdt:transformation>
	</xp:fixture>
	<xp:fixture key="link:/barchart.xml">
	  <!-- StoryTeller Chart Definition to be reused between legacy and modern chart -->
	  <scd:scd style="font-size:8pt; font-style:italic;"
			   xmlns:scd="http://developer.opentext.com/schemas/storyteller/chart/definition">
		<scd:title text="Bar Chart" style="font-size:15pt" />
        <scd:plot logical_x_low="0" logical_x_high="12" logical_y_low="0" logical_y_high="0.4"
				  style="margin-left:20pt;margin-right:20pt;margin-top:20pt;margin-bottom:20pt" />
        <scd:axis_x/>
        <scd:axis_y/>
        <scd:support_lines logical_step ="0.1" label_placement="start" label_position_v="center" 
						   label_alignment="left" draw_behind="true" mask="#%"
						   style="stroke-dasharray:1pt, 5pt;stroke-width: 0.57pt" />
		<scd:layer type="bar" gap ="0.1" xpath="//election[@year='2012']" bar_width="1">
		  <scd:series col_label="1" col_y="3"/>
		</scd:layer>
	  </scd:scd>
	</xp:fixture>
  </stl:fixtures>

  <stl:data>
	<stl:source src="wd:/election-data.xml" />
	<stl:template>
	  <data xmlns:ddi="http://developer.opentext.com/schemas/storyteller/layout/ddi/v1">
		<election year="?" default_style="font-family:Arial;font-size:9pt;">
		  <ddi:header>
				<ddi:cell>Region</ddi:cell>
				<ddi:cell>Population</ddi:cell>
					<ddi:cell data_type="number">Participation</ddi:cell>
		  </ddi:header>
			<ddi:row id="?">
				<ddi:cell label_rotation="30" label_position_h="right">?</ddi:cell>
				<ddi:cell>?</ddi:cell>
				<ddi:cell data_style="?">?</ddi:cell>
		  </ddi:row>
		</election>
	  </data>
	</stl:template>
	<stl:transformation>
	  <tdt:transformation 
		  xmlns:tdt="http://developer.opentext.com/schemas/storyteller/transformation/tdt" 
		  xmlns:usr="http://developer.opentext.com/schemas/storyteller/transformation/usr"
			xmlns:ddi="http://developer.opentext.com/schemas/storyteller/layout/ddi/v1"
			version="1.0">
		<xp:include src="link:/tdt/functions.xml" xpath="//tdt:rule"/>
		<tdt:rule path="/">
		  <tdt:value key="$colors">'#D4E500,#E5E603,#E8D906,#EACB0A,#EBBD0D,#EDB011,#EFA315,#F19618,#F28A1C,#F47E20,#F67224,#F86627,#F95B2B,#FB502F,#FD4633,#FF3B38'</tdt:value>
		  <tdt:value key="$palette">tdt:split($colors, ',')</tdt:value>
		  <tdt:value key="$min">usr:min(//region, '@participation')</tdt:value>
		  <tdt:value key="$max">usr:max(//region, '@participation')</tdt:value>
<!--
          <tdt:value key="$max">//region[not(@participation &lt;= preceding-sibling::*/@participation) and not(@participation &lt;= following-sibling::*/@participation)]/@participation</tdt:value>
          <tdt:value key="$min">//region[not(@participation &gt;= preceding-sibling::*/@participation) and not(@participation &gt;= following-sibling::*/@participation)]/@participation</tdt:value>
-->
		</tdt:rule>
		<tdt:rule path="/data/election">
		  <tdt:value key=".">/election</tdt:value>
		  <tdt:value key="@year">@year</tdt:value>
		</tdt:rule>
		<tdt:rule path="/data/election/ddi:row">
		  <tdt:value key=".">region</tdt:value>
		  <tdt:value key="@id">@id</tdt:value>
		</tdt:rule>
		<tdt:rule path="/data/election/ddi:row/ddi:cell[1]">
		  <tdt:value key="text()">@name</tdt:value>
		</tdt:rule>
		<tdt:rule path="/data/election/ddi:row/ddi:cell[2]">
		  <tdt:value key="text()">@population</tdt:value>
		</tdt:rule>
		<tdt:rule path="/data/election/ddi:row/ddi:cell[3]">
		  <tdt:value key="$color">round(1+(count($palette)-1) * (@participation - $min) div ($max - $min))</tdt:value>
		  <tdt:value key="@data_style">concat("fill:", $palette[$color], "; stroke: none;")</tdt:value>
		  <tdt:value key="text()">@participation</tdt:value>
		</tdt:rule>
	  </tdt:transformation>
	</stl:transformation>
  </stl:data>

  <stl:style>
	.paragraph {
	  text-align: justify;
	  margin-bottom: 8pt;
	}

	/* style emphasizing a block of a text */
	.emphasis {
	  font-style: italic;
	}

	.table {
	  background-color: lightblue;
	  border-collapse: collapse;
	  display: table;
	}

	/* styles representing cell and table border */
	.theader, .even-trow, .odd-trow {
	  font-family: Arial;
	  font-size: 10pt;
	  padding: 8pt 2pt;
	}
	.theader {
	  font-weight: bold;
	  background-color: #acf;	  
	}
	.even-trow {
	  border-top: 1pt solid darkblue;
	  background-color: #def;	  
	}
	.odd-trow {
	  background-color: #edf3fe;	  
	}
  </stl:style>

  <stl:document>
	<stl:story name="Main" w="500pt">
	  <stl:p style="font-family:Arial; font-size:28pt; font-weight:bold; margin-bottom:25pt;">
		Regional Elections 2012
	  </stl:p>
	  <stl:p>
		<!-- Table presenting election data -->
		<stl:table class="table" w="100%">
		  <stl:story>
			<stl:row h="30pt">
			  <stl:cell class="theader" w="40%">
				<stl:p>
				  <stl:field xpath="//election/ddi:header/ddi:cell[1]"/>
				</stl:p>
			  </stl:cell>
			  <stl:cell class="theader" w="20%">
				<stl:p style="text-align:right;">
				  <stl:field xpath="//election/ddi:header/ddi:cell[2]"/>
				</stl:p>
			  </stl:cell>
			  <stl:cell class="theader" w="40%">
				<stl:p style="text-align:right;">
				  <stl:field xpath="//election/ddi:header/ddi:cell[3]"/>
				</stl:p>
			  </stl:cell>
			</stl:row>
			<stl:repeater xpath="//election/ddi:row">
			  <stl:row>
				<stl:cell class="even-trow">
				  <stl:p>
					<stl:field xpath="ddi:cell[1]"/>
				  </stl:p>
				</stl:cell>
				<stl:cell class="even-trow">
				  <stl:p style="text-align:right;">
					<stl:field xpath="ddi:cell[2]"/>
				  </stl:p>
				</stl:cell>
				<stl:cell class="even-trow">
				  <stl:p style="text-align:right;">
					<stl:field xpath="100* ddi:cell[3]" mask="num.decimal(en_US){}"/> %
				  </stl:p>
				</stl:cell>
			  </stl:row>
			</stl:repeater>
		  </stl:story>
		</stl:table>
		<stl:break type="area"/>
	  </stl:p>

	  <stl:p style="text-align:center;">
		<!-- Legacy chart presenting election data -->
		<stl:chart w="90%" h="220pt" modern="false">
		  <xp:include src="link:/barchart.xml"/>
		</stl:chart>
	  </stl:p>

	  <stl:p style="text-align: center; margin-top: 100pt;">
		<!-- Modern chart presenting election data -->
		<stl:chart w="90%" h="220pt" modern="true" src="link:/barchart.xml" />
	  </stl:p>


	  <stl:p style="text-align:center;">
		<!-- SVG-based fragment presenting a map colored with election data -->
		<stl:fragment w="100%" h="400px" src="wd:/czechRepublicLow.svg" selector="/item[1]">
		  <stl:script language="js">
			var item = require('layout').item();
			var data = require('data');
			var services = require('services');
			var streams = require('streams');

			// load primary rules, TDT template and input data
			var rules = streams.stream('link:/tdt/rules.xml');
			var template = streams.stream('link:/tdt/template.xml');
			var regions = streams.stream().write(data.dump('/'));
			var tdt = services.tdt(template, rules, 127);

			// apply primary transformation - dynamically generate actual TDT rules 
			rules = tdt( regions, streams.stream() );

			// load SVG template
			template = streams.stream('wd:/czechRepublicLow.svg');
			tdt = services.tdt(template, rules, 31);
			
			// apply transformation to create SVG heatmap
			var svg = tdt(regions, streams.stream('local:'));

			// modify fragment URI 
			item.Uri = svg.uri;
		  </stl:script>
		</stl:fragment>
	  </stl:p>
	</stl:story>

	<stl:page w="600pt" h="800pt" occurrence="repeatable">
	  <stl:text x="50pt" y="50pt" w="500pt" h="700pt" story="Main"/>
	</stl:page>
  </stl:document>
</stl:stl>
